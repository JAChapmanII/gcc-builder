diff --git a/gcc/libgcc/config/alpha/linux-unwind.h 
b/gcc/libgcc/config/alpha/linux-unwind.h
index 4c811dc..f747053 100644
--- a/gcc/libgcc/config/alpha/linux-unwind.h
+++ b/gcc/libgcc/config/alpha/linux-unwind.h
@@ -49,7 +49,7 @@ alpha_fallback_frame_state (struct _Unwind_Context *context,
   else if (pc[1] == 0x201f015f)                /* lda $0,NR_rt_sigreturn */
     {
       struct rt_sigframe {
-       struct siginfo info;
+       siginfo_t info;
        struct ucontext uc;
       } *rt_ = context->cfa;
       sc = &rt_->uc.uc_mcontext;
diff --git a/gcc/libgcc/config/bfin/linux-unwind.h 
b/gcc/libgcc/config/bfin/linux-unwind.h
index 88c8285..6e8f1ad 100644
--- a/gcc/libgcc/config/bfin/linux-unwind.h
+++ b/gcc/libgcc/config/bfin/linux-unwind.h
@@ -48,10 +48,10 @@ bfin_fallback_frame_state (struct _Unwind_Context *context,
     {
       struct rt_sigframe {
        int sig;
-       struct siginfo *pinfo;
+       siginfo_t *pinfo;
        void *puc;
        char retcode[8];
-       struct siginfo info;
+       siginfo_t info;
        struct ucontext uc;
       } *rt_ = context->cfa;
 
diff --git a/gcc/libgcc/config/i386/linux-unwind.h 
b/gcc/libgcc/config/i386/linux-unwind.h
index f17a46c..33810c5 100644
--- a/gcc/libgcc/config/i386/linux-unwind.h
+++ b/gcc/libgcc/config/i386/linux-unwind.h
@@ -139,9 +139,9 @@ x86_fallback_frame_state (struct _Unwind_Context *context,
     {
       struct rt_sigframe {
        int sig;
-       struct siginfo *pinfo;
+       siginfo_t *pinfo;
        void *puc;
-       struct siginfo info;
+       siginfo_t info;
        struct ucontext uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
diff --git a/gcc/libgcc/config/ia64/linux-unwind.h 
b/gcc/libgcc/config/ia64/linux-unwind.h
index 93f762d..baf80ee 100644
--- a/gcc/libgcc/config/ia64/linux-unwind.h
+++ b/gcc/libgcc/config/ia64/linux-unwind.h
@@ -47,7 +47,7 @@ ia64_fallback_frame_state (struct _Unwind_Context *context,
       struct sigframe {
        char scratch[16];
        unsigned long sig_number;
-       struct siginfo *info;
+       siginfo_t *info;
        struct sigcontext *sc;
       } *frame_ = (struct sigframe *)context->psp;
       struct sigcontext *sc = frame_->sc;
@@ -137,7 +137,7 @@ ia64_handle_unwabi (struct _Unwind_Context *context, 
_Unwind_FrameState *fs)
       struct sigframe {
        char scratch[16];
        unsigned long sig_number;
-       struct siginfo *info;
+       siginfo_t *info;
        struct sigcontext *sc;
       } *frame = (struct sigframe *)context->psp;
       struct sigcontext *sc = frame->sc;
diff --git a/gcc/libgcc/config/mips/linux-unwind.h 
b/gcc/libgcc/config/mips/linux-unwind.h
index 02f7cd5..69d96f1 100644
--- a/gcc/libgcc/config/mips/linux-unwind.h
+++ b/gcc/libgcc/config/mips/linux-unwind.h
@@ -75,7 +75,7 @@ mips_fallback_frame_state (struct _Unwind_Context *context,
       struct rt_sigframe {
        u_int32_t ass[4];  /* Argument save space for o32.  */
        u_int32_t trampoline[2];
-       struct siginfo info;
+       siginfo_t info;
        _sig_ucontext_t uc;
       } *rt_ = context->cfa;
       sc = &rt_->uc.uc_mcontext;
diff --git a/gcc/libgcc/config/pa/linux-unwind.h b/gcc/libgcc/config/pa/linux-unwind.h
index a0560e9..dd8f590 100644
--- a/gcc/libgcc/config/pa/linux-unwind.h
+++ b/gcc/libgcc/config/pa/linux-unwind.h
@@ -63,7 +63,7 @@ pa32_fallback_frame_state (struct _Unwind_Context *context,
   int i;
   struct sigcontext *sc;
   struct rt_sigframe {
-    struct siginfo info;
+    siginfo_t info;
     struct ucontext uc;
   } *frame;
 
diff --git a/gcc/libgcc/config/sh/linux-unwind.h b/gcc/libgcc/config/sh/linux-unwind.h
index 94ed95d..c1e1adb 100644
--- a/gcc/libgcc/config/sh/linux-unwind.h
+++ b/gcc/libgcc/config/sh/linux-unwind.h
@@ -80,9 +80,9 @@ shmedia_fallback_frame_state (struct _Unwind_Context *context,
           && (*(unsigned long *) (pc+11)  == 0x6ff0fff0))
     {
       struct rt_sigframe {
-       struct siginfo *pinfo;
+       siginfo_t *pinfo;
        void *puc;
-       struct siginfo info;
+       siginfo_t info;
        struct ucontext uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
@@ -179,7 +179,7 @@ sh_fallback_frame_state (struct _Unwind_Context *context,
                && (*(unsigned short *) (pc+14)  == 0x00ad))))
     {
       struct rt_sigframe {
-       struct siginfo info;
+       siginfo_t info;
        struct ucontext uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
diff --git a/gcc/libgcc/config/tilepro/linux-unwind.h 
b/gcc/libgcc/config/tilepro/linux-unwind.h
index 0ed662c..27a6c43 100644
--- a/gcc/libgcc/config/tilepro/linux-unwind.h
+++ b/gcc/libgcc/config/tilepro/linux-unwind.h
@@ -61,7 +61,7 @@ tile_fallback_frame_state (struct _Unwind_Context *context,
 
   struct rt_sigframe {
     unsigned char save_area[C_ABI_SAVE_AREA_SIZE];
-    struct siginfo info;
+    siginfo_t info;
     struct ucontext uc;
   } *rt_;
 
diff --git a/gcc/libgcc/config/xtensa/linux-unwind.h 
b/gcc/libgcc/config/xtensa/linux-unwind.h
index 32e9349..dda1f29 100644
--- a/gcc/libgcc/config/xtensa/linux-unwind.h
+++ b/gcc/libgcc/config/xtensa/linux-unwind.h
@@ -62,7 +62,7 @@ xtensa_fallback_frame_state (struct _Unwind_Context *context,
   struct sigcontext *sc;
 
   struct rt_sigframe {
-    struct siginfo info;
+    siginfo_t info;
     struct ucontext uc;
   } *rt_;
 